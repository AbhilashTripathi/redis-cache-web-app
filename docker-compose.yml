# services:
#   mongo:
#     image: mongo:latest
#     container_name: mongo
#     volumes:
#       - mongo_data:/data/db
#     networks:
#       mynet:
#         ipv4_address: 172.16.230.2

#   redis:
#     image: redis:latest
#     container_name: redis
#     networks:
#       mynet:
#         ipv4_address: 172.16.230.3
#     volumes:
#       - redis_data:/data
#     restart: unless-stopped

#   backend:
#     build: ./backend
#     container_name: backend
#     ports:
#       - "8765:8765"
#     depends_on:
#       - mongo
#       - redis
#     networks:
#       mynet:
#         ipv4_address: 172.16.230.4
#     environment:
#       - MONGO_URI=mongodb://mongo:27017/mydb
#       - REDIS_HOST=redis
#       - REDIS_PORT=6379

#   frontend:
#     build: ./my-react-app
#     container_name: frontend
#     ports:
#       - "3000:3000"
#     depends_on:
#       - backend
#     networks:
#       mynet:
#         ipv4_address: 172.16.230.5

# networks:
#   mynet:
#     driver: bridge
#     ipam:
#       config:
#         - subnet: 172.16.230.0/24

# volumes:
#   mongo_data:
#   redis_data:


services:
  webapp:
    build: .
    ports:
      - "8765:3000"
    depends_on:
      - mongodb
      - redis
    networks:
      app_net:
        ipv4_address: 172.16.230.2

  mongodb:
    image: mongo:latest
    volumes:
      - ./data/mongodb:/data/db
    networks:
      app_net:
        ipv4_address: 172.16.230.3

  redis:
    image: redis:6
    volumes:
      - ./data/redis:/data
    networks:
      app_net:
        ipv4_address: 172.16.230.4

networks:
  app_net:
    ipam:
      driver: default
      config:
        - subnet: 172.16.230.0/24